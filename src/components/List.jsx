import React from "react";
import styled from "styled-components";
import {useDispatch, useSelector} from "react-redux";
import {deleteTodo, toggleStatusTodo } from "../redux/modules/todos"
import {Link} from "react-router-dom";


const List = () => {
    const dispatch = useDispatch();
    const todos = useSelector((state) => state.todos.todos);
// *** ÏÉùÏÑ±Ìïú Î™®ÎìàÏùÑ Ïä§ÌÜ†Ïñ¥Ïóê Ïûò Ïó∞Í≤∞ÌñàÎäîÏßÄ ÌôïÏù∏ÌïòÎäî Î∞©Î≤ïÏùÄ Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Ïä§ÌÜ†Ïñ¥Î•º ÏßÅÏ†ë Ï°∞ÌöåÌïòÎ©¥ Îê®. Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Î¶¨ÎçïÏä§ Ïä§ÌÜ†Ïñ¥Î•º Ï°∞ÌöåÌï† Îïå : useSelectorÎùºÎäî react-reduxÏùò ÌõÖÏùÑ ÏÇ¨Ïö©! ***
// 1. storeÏóêÏÑú Í∫ºÎÇ∏ Í∞ìÏùÑ Ìï†Îãπ Ìï† Î≥ÄÏàòÎ•º ÏÑ†Ïñ∏
// 2. useSelector()Î•º Î≥ÄÏàòÏóê Ìï†Îãπ
// 3. useSelector Ïù∏ÏûêÏóê ÌôîÏÇ¥Ìëú Ìï®Ïàò ÎÑ£Ïñ¥Ï£ºÍ∏∞
// 4. ÌôîÏÇ¥Ìëú Ìï®ÏàòÏùò Ïù∏ÏûêÏóêÏÑú Í∞íÏùÑ Í∫ºÎÇ¥ return
// const number = useSelector((state) => {
//     console.log(state)
//     return state
// })

    const onDeleteTodo = (id) => {
        dispatch(deleteTodo(id));
    };

    const onToggleStatusTodo = (id) => {
        dispatch(toggleStatusTodo(id));
    };



    return (
        <ListContainer>
      <h2>Working.. üî•</h2>
      <ListWrap>
        {todos.map((todo) => {
          if (!todo.isDone) {
            return (
              <TodoBox key={todo.id}>
                <Link to={`/${todo.id}`} key={todo.id}>
{                  }<div>ÏÉÅÏÑ∏Î≥¥Í∏∞</div>
                </Link>
                <div>
                  <h2 className="todo__title">{todo.title}</h2>
                  <div>{todo.body}</div>
                </div>
                <Btns>
                  <BtnTodo
                    borderColor="red"
                    onClick={() => onDeleteTodo(todo.id)}
                  >
                    ÏÇ≠Ï†ú
                  </BtnTodo>
                  <BtnTodo
                    borderColor="green"
                    onClick={() => onToggleStatusTodo(todo.id)}
                  >
                    {todo.isDone ? "Ï∑®ÏÜå!" : "ÏôÑÎ£å!"}
                  </BtnTodo>
                </Btns>
              </TodoBox>
            );
          } else {
            return null;
          }
        })}
      </ListWrap>
      <h2>Done..! üéâ</h2>
      <ListWrap>
        {todos.map((todo) => {
          if (todo.isDone) {
            return (
              <TodoBox key={todo.id}>
                <Link to={`/${todo.id}`} key={todo.id}>
                  <MoveTo>ÏÉÅÏÑ∏Î≥¥Í∏∞</MoveTo>
                </Link>
                <div>
                  <h2 className="todo__title">{todo.title}</h2>
                  <div>{todo.body}</div>
                </div>
                <Btns>
                  <BtnTodo
                    onClick={() => onDeleteTodo(todo.id)}
                  >
                    ÏÇ≠Ï†ú
                  </BtnTodo>
                  <BtnTodo
                    onClick={() => onToggleStatusTodo(todo.id)}
                  >
                    {todo.isDone ? "Ï∑®ÏÜå!" : "ÏôÑÎ£å!"}
                  </BtnTodo>
                </Btns>
              </TodoBox>
            );
          } else {
            return null;
          }
        })}
      </ListWrap>
    </ListContainer>
)
};

export default List;


const ListContainer = styled.div`
    /* background-color:#f5f5f5; */
    width: 100%;
    height: auto;
    /* padding: 20px; */
    border-radius: 20px;
    margin: 20px 0;
`;
const ListWrap = styled.div`
    background-color:#f5f5f5;
    width: 100%;
    padding: 20px;
    border-radius: 20px;
    margin: 20px 0;
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
`;

const TodoBox = styled.div`
    width: 30%;
    height: auto;
    border: 1px solid black;
`



const Btns = styled.div`
    display: flex;
    margin: 10px 0 0 0;
`;

const BtnTodo = styled.div`
    margin: 10px 20px 10px 0;
    padding: 7px 20px;
    border-radius: 10px;
    border: 1px solid black;
    margin: 20px;
`

const MoveTo = styled.span`
    background-color: aliceblue;

`



